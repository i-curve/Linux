
#user  nobody;
worker_processes  1;

#网络超时时间
#keepalive_timeout 60;


#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    #关闭显示版本功能
    #server_tokens off;
    #
    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;
    #
    #
    #限流
    #limit_conn_zone $binary_remote_addr zone=one:10m; 
    #limit_conn 2;   #可以放在server中
    #
    #limit_req_zone #binary_remote_addr zone=req_one rate=1r/s;
    #limit_req zone=req_one burst=120; #可以放在server中
    #
    #第三种限流在upstream server{中设置
    #在server后家max_conns=6;
    server {
        listen       80;
        server_name  localhost;

        #charset koi8-r;

        #access_log  logs/host.access.log  main;
        #反向代理功能
        #upstream localhost{
        #  
        #  ip_hash;ip哈希hash法;least_conn;
        #   server 192.168.1.1;  #添加weight即为轮询法负载均衡。
        #   server 192.168.1.2;
        #   server 192.168.1.3;
        #}

        location / {
            root   html;
            index  index.html index.htm;
            #代理功能
            #proxy_pass http://localhost;
        }

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }
        #访问控制
        #location /{
        #   deny 192.168.1.1;
        #   allow any;
        #}
        #日志功能
        #location /logs{
        #展示目录
        #   autoindex on;
        #位置
        #   root /opt/nginx/;
        #}
        #日志功能
        #location /NginxState{
        #   stub_status on;
        #   acess_log off;
        #}
        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
    }


    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    # HTTPS server
    #
    #server {
    #    listen       443 ssl;
    #    server_name  localhost;

    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_cache    shared:SSL:1m;
    #    ssl_session_timeout  5m;

    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers  on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}

}

